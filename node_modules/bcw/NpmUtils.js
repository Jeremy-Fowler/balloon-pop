#!/usr/bin/env node
const { execSync } = require("child_process");
const { clearScreen, printInfo, printWarning, colors } = require("./console-utils");
const pkg = require("./package.json");

function printHelp() {
  clearScreen()
  printInfo(`

  ██████╗ ██████╗ ██████╗ ███████╗██╗    ██╗ ██████╗ ██████╗ ██╗  ██╗███████╗
██╔════╝██╔═══██╗██╔══██╗██╔════╝██║    ██║██╔═══██╗██╔══██╗██║ ██╔╝██╔════╝
██║     ██║   ██║██║  ██║█████╗  ██║ █╗ ██║██║   ██║██████╔╝█████╔╝ ███████╗
██║     ██║   ██║██║  ██║██╔══╝  ██║███╗██║██║   ██║██╔══██╗██╔═██╗ ╚════██║
╚██████╗╚██████╔╝██████╔╝███████╗╚███╔███╔╝╚██████╔╝██║  ██║██║  ██╗███████║
  ╚═════╝ ╚═════╝ ╚═════╝ ╚══════╝ ╚══╝╚══╝  ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝╚══════╝
`)
  printWarning(`version: ${pkg.version}`);
  console.log(`
  Tools:
    [-] ${colors.FgGreen}bcw-create:${colors.Reset} creates a new project from templates
    [-] ${colors.FgGreen}bcw-add:${colors.Reset} selectively add packages to your existing project
    [-] ${colors.FgGreen}bcw-serve (-p || --port):${colors.Reset} initailizes the static server with optional specification for the port to serve on
    [-] ${colors.FgGreen}bcw-update:${colors.Reset} installs the latest version of the bcw tool`);
}

function start(){
  try {
    printHelp()
  } catch (error) {
    console.error(error);
  }
}

start()
